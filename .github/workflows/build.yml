name: build

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/build.yml
      - api/**
      - cli/**
      - desktop/**
      - runner/**
      - server/**
      - simulator/**
      - simulator_graphics/**
      - viewer/**
      - web/**
      - worker_builder/**
      - worker_simulator/**

jobs:
  build_all:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64
          tags: ghcr.io/code-tanks/code-tanks-all:latest
          cache-from: type=registry,ref=ghcr.io/code-tanks/code-tanks-all:buildcache
          cache-to: type=registry,ref=ghcr.io/code-tanks/code-tanks-all:buildcache,mode=max

  build_rust_runner:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/
            target/
          key: ${{ runner.os }}-cargo-runner-${{ hashFiles('runner/Cargo.toml') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo build --bin ctrunner
  build_cli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/
            target/
          key: ${{ runner.os }}-cargo-cli-${{ hashFiles('cli/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo build --bin ctcli
  build_desktop:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/
            target/
          key: ${{ runner.os }}-cargo-desktop-${{ hashFiles('desktop/Cargo.toml') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: sudo apt-get install -y g++ pkg-config libx11-dev libasound2-dev libudev-dev
      - run: cargo build --bin ctdesktop
  build_builder_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: worker_builder/Dockerfile
          push: true
          platforms: linux/arm64, linux/amd64
          tags: ghcr.io/code-tanks/code-tanks-builder:latest
          cache-from: type=registry,ref=ghcr.io/code-tanks/code-tanks-builder:buildcache
          cache-to: type=registry,ref=ghcr.io/code-tanks/code-tanks-builder:buildcache,mode=max

  build_simulator_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: worker_simulator/Dockerfile
          push: true
          platforms: linux/arm64, linux/amd64
          tags: ghcr.io/code-tanks/code-tanks-simulator:latest
          cache-from: type=registry,ref=ghcr.io/code-tanks/code-tanks-simulator:buildcache
          cache-to: type=registry,ref=ghcr.io/code-tanks/code-tanks-simulator:buildcache,mode=max

  build_server_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: server/Dockerfile
          push: true
          platforms: linux/arm64, linux/amd64
          tags: ghcr.io/code-tanks/code-tanks-server:latest
          cache-from: type=registry,ref=ghcr.io/code-tanks/code-tanks-server:buildcache
          cache-to: type=registry,ref=ghcr.io/code-tanks/code-tanks-server:buildcache,mode=max

  build_web_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: web/Dockerfile
          push: true
          platforms: linux/arm64, linux/amd64
          tags: ghcr.io/code-tanks/code-tanks-web:latest
          cache-from: type=registry,ref=ghcr.io/code-tanks/code-tanks-web:buildcache
          cache-to: type=registry,ref=ghcr.io/code-tanks/code-tanks-web:buildcache,mode=max