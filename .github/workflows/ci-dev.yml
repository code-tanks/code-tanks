name: ci-dev

on:
  workflow_run:
    workflows: ["build-dev"]
    types:
      - completed
  push:
    branches:
      - main
    paths:
      - .github/workflows/ci-dev.yml
      - scripts/test/**
      - up.sh
  #     - api/**
  #     - cli/**
  #     # - desktop/**
  #     - runner/**
  #     - server/**
  #     - simulator/**
  #     - simulator_graphics/**
  #     - viewer/**
  #     - web/**
  #     - worker_builder/**
  #     - worker_simulator/**
  #     - docker-compose.yml
  #     - ocypod.toml

jobs:
  test:
    runs-on: ubuntu-latest
    # services:
      # ctall:
      #   image: ghcr.io/code-tanks/code-tanks-all-dev:latest
      #   ports:
      #     - 8089:8088
      #   volumes:
      #     - /var/run/docker.sock:/var/run/docker.sock
      #   env:
      #     DB_URL: postgres://postgres:postgres@localhost:5432
      #     OCYPOD_URL: localhost:8023
      # registry:
      #   image: registry
      #   ports:
      #     - 5001:5001
      #   env:
      #     REGISTRY_HTTP_ADDR: 0.0.0.0:5001

    steps:
      - uses: actions/checkout@v3
      - name: "up"
        run: docker compose up -d
      - name: "pull dart"
        run: docker pull dart:stable
      - name: "sleep"
        run: sleep 10
      - name: "test server"
        run: curl -s localhost:8089/ping
      # - name: "Test do_nothing"
      #   run: |
      #     echo "HOST=localhost:8089" > ./scripts/.env
      #     ./scripts/test/test_do_nothing.sh
      - name: "Test spin_bot"
        run: |
          echo "HOST=localhost:8089" > ./scripts/.env

          . ./scripts/helper/setup_host.sh

          OUTPUT=$(./scripts/dev/no-docker/upload_tank.sh examples/dart/spin_bot.dart)

          if [[ $OUTPUT != "1wexiev" ]]
          then
            echo "Failed to upload examples/dart/spin_bot.dart"
            echo "Expected: 1wexiev"
            echo "Got: $OUTPUT"
            exit 1
          fi

          sleep 30

          OUTPUT=$(./scripts/dev/no-docker/get_build_log.sh "1wexiev")

          if [[ "${OUTPUT}" == '"404"' ]]
          then
            echo "Failed to get build log for 1wexiev"
            echo 'Got: "404"'
            exit 1
          fi

          echo "build log:"
          echo "${OUTPUT}"

          OUTPUT=$(./scripts/dev/no-docker/get_raw.sh "1wexiev")
          RAW="$(<examples/dart/spin_bot.dart)"

          if [[ "${OUTPUT}" != "${RAW}" ]]
          then
            echo "Failed to get raw for 1wexiev"
            echo 'Got:'
            echo "${OUTPUT}"
            echo 'Expected:'
            echo "${RAW}"
            exit 1
          fi

          RAW='1wexiev
          0|10,0,0,0,-0.70710677,0.70710677,0,0,-0.70710677,0.70710677,0,0,-0.70710677,0.70710677
          {"1wexiev-1wexiev-0":{"damage_given":0,"health":100,"index":0,"tank_id":"1wexiev"},"tanks":["1wexiev"],"winner":"1wexiev-1wexiev-0","winner_index":0}'

          OUTPUT=$(./scripts/dev/no-docker/run_sim.sh "1wexiev" "1wexiev")
          if [[ "${OUTPUT}" != "waiting to build" ]]
          then
            echo "Failed run sim for 1wexiev"
            echo 'Got:'
            echo "${OUTPUT}"
            echo 'Expected:'
            echo "waiting to build"
            exit 1
          fi

          sleep 60
          OUTPUT=$(./scripts/dev/no-docker/run_sim.sh "1wexiev" "1wexiev")

          echo "${OUTPUT}" > ./scripts/test/output.txt
          tr -d '\r'  < ./scripts/test/output.txt > ./scripts/test/output1.txt

          echo "${RAW}" > ./scripts/test/raw.txt

          if cmp ./scripts/test/output1.txt ./scripts/test/raw.txt;
          then
              echo "success"
          else
            echo "Failed determinism for sim 1wexiev"
            echo 'Got:'
            echo "${OUTPUT}"
            echo 'Expected:'
            echo "${RAW}"
            docker compose logs simulator
            exit 1
          fi

          echo "sim:"
          echo "${OUTPUT}"

        # ./scripts/test/test_spin_bot.sh

        # run: script -e -c "./scripts/test/test_do_nothing.sh"
      